name: Rust

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main", "add-ci-checks-for-deposits"]

env:
  CARGO_TERM_COLOR: "always"
  CARGO_INCREMENTAL: "0"
  RUSTC_WRAPPER: "sccache"
  SCCACHE_GHA_ENABLED: "true"
  # Minimum supported Rust version.
  msrv: 1.81.0

permissions:
  contents: write

jobs:
  build-msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.msrv }}
      - name: Install sccache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Build
        run: cargo build --all-features

      - name: Build (no features)
        run: cargo build --no-default-features

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy, rust-src
      - name: Install sccache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Install anvil-zksync
        uses: dutterbutter/anvil-zksync-action@v1.1.0

      - name: Format
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
      - name: Clippy (no features)
        run: cargo clippy --no-default-features --all-targets -- -D warnings

      - name: Run tests
        run: cargo test --all-features --all-targets
      - name: Run tests (no features)
        run: cargo test --no-default-features --all-targets
      - name: Run doc tests
        run: cargo test --all-features --doc

      - name: Checkout local setup repository
        uses: actions/checkout@v4
        with:
          repository: matter-labs/local-setup
          path: dockerized-node
      - name: Set up docker build
        uses: docker/setup-buildx-action@v3.8.0
      - name: Start dockerized node
        run: |
          docker compose -f "./dockerized-node/docker-compose.yml" up -d --build --wait --wait-timeout 2000
      - name: Run examples
        run: |
          cargo run --example showcase
          cargo run --example deploy
          cargo run --example deposit_eth
          cargo run --example deposit_erc20

  document:
    needs:
      - test
      - build-msrv
    if: github.event_name == 'push' && github.ref_type == 'branch'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.msrv }}
      - name: Install sccache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Build docs
        run: |
          cargo clean --doc && \
          cargo rustdoc --all-features -- --cfg docsrs

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/doc
          single-commit: true
